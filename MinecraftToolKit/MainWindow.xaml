<Window x:Class="MinecraftToolKit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MinecraftToolKit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
       WindowStyle="None" 
        Title="Minecraft:BedrockEdition ToolKit by gxh"
        AllowsTransparency="True"
          ResizeMode="CanResizeWithGrip"
       Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <Storyboard x:Key="MenuOpen">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                    <EasingDoubleKeyFrame KeyTime="0:0:1.0" Value="200">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="MenuClose">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                    <EasingDoubleKeyFrame KeyTime="0:0:1.0" Value="40">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Style TargetType="{x:Type ResizeGrip}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ResizeGrip}">
                            <Border Height="15" Width="15" HorizontalAlignment="Right" VerticalAlignment="Bottom" Cursor="SizeNWSE" >
                                <materialDesign:PackIcon HorizontalAlignment="Right" Margin="1" VerticalAlignment="Bottom" Height="25" Width="25" Kind="ResizeBottomRight"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FlatButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}" >
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                                    <Grid>
                                        <Border Background="{TemplateBinding Background}" 
                                        CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        x:Name="border"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static materialDesign:ShadowConverter.Instance}}" />
                                        <ProgressBar x:Name="ProgressBar"
                                             Style="{DynamicResource MaterialDesignLinearProgressBar}"
                                             Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Minimum)}"
                                             Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Maximum)}"
                                             Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IndicatorForeground)}"
                                             Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IndicatorBackground)}"
                                             Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Value)}"
                                             IsIndeterminate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IsIndeterminate)}"
                                             Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.IsIndicatorVisible), Converter={StaticResource BooleanToVisibilityConverter}}"
                                             Height="{TemplateBinding Height}"
                                             Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ButtonBase}}, Path=ActualWidth}"
                                             Opacity="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ButtonProgressAssist.Opacity)}"
                                             HorizontalAlignment="Left"
                                             VerticalAlignment="Center">
                                        </ProgressBar>
                                    </Grid>
                                </AdornerDecorator>
                                <materialDesign:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <materialDesign:Ripple.Clip>
                                        <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                            <Binding ElementName="border" Path="ActualWidth" />
                                            <Binding ElementName="border" Path="ActualHeight" />
                                            <Binding ElementName="border" Path="CornerRadius" />
                                            <Binding ElementName="border" Path="BorderThickness" />
                                        </MultiBinding>
                                    </materialDesign:Ripple.Clip>
                                </materialDesign:Ripple>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
                                    <Setter Property="Background" >
                                        <Setter.Value>
                                            <SolidColorBrush Color="AliceBlue" Opacity=".3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <!--<Setter Property="Opacity" Value=".6"/>-->
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value=".23"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TabRadioButton"  TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MaterialDesignTabRadioButton}">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border HorizontalAlignment="Left" Padding="0,0"  x:Name="border" Background="{TemplateBinding Background}" Grid.ColumnSpan="2">
                                    <materialDesign:Ripple Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}"
                                        x:Name="contentPresenter"
                                        Opacity=".7"  
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <Border x:Name="SelectionHighlightBorder" Background="{TemplateBinding BorderBrush}" Width="2"
                                 Visibility="Hidden" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="1"/>
                                    <Setter TargetName="border" Property="Padding" Value="2,0" />
                                    <Setter TargetName="SelectionHighlightBorder" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="ButtonMenuArea">
            <BeginStoryboard Storyboard="{StaticResource MenuOpen}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="ButtonMenuArea">
            <BeginStoryboard Storyboard="{StaticResource MenuClose}"/>
        </EventTrigger>
    </Window.Triggers>
    <Grid >
        <GroupBox  Style="{DynamicResource MaterialDesignGroupBox}" Padding="2,0,2,2" materialDesign:ShadowAssist.ShadowDepth="Depth3" BorderThickness="2">
            <GroupBox.Header>
                <materialDesign:ColorZone x:Name="headerColorZone" Mode="PrimaryMid"  Height="33" MouseLeftButtonDown="Move_window_MouseLeftButtonDown">
                    <DockPanel >
                        <Button DockPanel.Dock="Right"  Width="33" Margin="0,2,0,0" Style="{DynamicResource FlatButton}" ToolTip="WindowClose"   HorizontalAlignment="Right" VerticalAlignment="Top"   Foreground="White" Click="CloseWindow_Click">
                            <materialDesign:PackIcon  Kind="Close"  Height="28" Width="28" />
                        </Button>
                        <Button DockPanel.Dock="Right"  Width="33" Margin="0,2,0,0" Style="{DynamicResource FlatButton}" ToolTip="WindowMinimize"  HorizontalAlignment="Right" VerticalAlignment="Top"   Foreground="White" Click="MiniWindow_Click">
                            <materialDesign:PackIcon   Kind="Remove"  Height="28"   Width="28" />
                        </Button> 
                        <materialDesign:PopupBox  DockPanel.Dock="Right"   PlacementMode="BottomAndAlignCentres">
                            <ListBox>
                                <ListBoxItem Content="About"/>
                                <ListBoxItem Content="Github"/>
                            </ListBox>
                        </materialDesign:PopupBox>
                        <ToggleButton x:Name="ButtonMenuArea" Cursor="Hand" Style="{DynamicResource MaterialDesignHamburgerToggleButton}"  Margin="1,0,0,0"  Height="36"/>
                        <TextBlock  VerticalAlignment="Center" Margin="3,0" TextAlignment="Center" Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
                    </DockPanel>
                </materialDesign:ColorZone>
            </GroupBox.Header>
            <Grid Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding ElementName=GridMenu,Path=ActualWidth}"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Frame x:Name="Frame" NavigationUIVisibility="Hidden" VerticalAlignment="Stretch"  Grid.Column="1"/>
                <Grid x:Name="GridMenu" Width="40" HorizontalAlignment="Left" Background="#FF1B3861" Margin="0,0,0,-0.333">
                    <StackPanel>
                        <StackPanel ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
                            <RadioButton Height="40" Style="{StaticResource TabRadioButton}" Checked="TabRadioButtonHome_Checked" >
                                <StackPanel Orientation="Horizontal" Margin="7.5,0" Width="200">
                                    <materialDesign:PackIcon Foreground="White" Kind="ViewDashboard" Width="24" Height="24"   VerticalAlignment="Center"/>
                                    <TextBlock Text="Home Page" Foreground="White" VerticalAlignment="Center" Margin="20,0"/>
                                </StackPanel>
                            </RadioButton>
                            <RadioButton Height="40" Style="{StaticResource TabRadioButton}" Checked="TabRadioButtonServers_Checked">
                                <StackPanel Orientation="Horizontal" Margin="7.5,0" Width="200">
                                    <materialDesign:PackIcon Foreground="White"  Kind="Wifi" Width="24" Height="24"   VerticalAlignment="Center"/>
                                    <TextBlock Text="Servers" VerticalAlignment="Center" Margin="20,0" Foreground="White"/>
                                </StackPanel>
                            </RadioButton>
                            <RadioButton Height="40" Style="{StaticResource TabRadioButton}" Checked="TabRadioButtonHexEdit_Checked">
                                <StackPanel Orientation="Horizontal" Margin="7.5,0" Width="200">
                                    <materialDesign:PackIcon Foreground="White"  Kind="Pencil" Width="24" Height="24"   VerticalAlignment="Center"/>
                                    <TextBlock Text="Hex Editor" VerticalAlignment="Center" Margin="20,0" Foreground="White"/>
                                </StackPanel>
                            </RadioButton>
                            <RadioButton Height="40" Style="{StaticResource TabRadioButton}" Checked="TabRadioButtonWhitelistEdit_Checked">
                                <StackPanel Orientation="Horizontal" Margin="7.5,0" Width="200">
                                    <materialDesign:PackIcon Foreground="White"  Kind="PersonEdit" Width="24" Height="24"   VerticalAlignment="Center"/>
                                    <TextBlock Text="whitelist.json Editor" VerticalAlignment="Center" Margin="20,0" Foreground="White"/>
                                </StackPanel>
                            </RadioButton>
                            <RadioButton Height="40" Style="{StaticResource TabRadioButton}" Checked="TabRadioButtonFloatColor_Checked">
                                <StackPanel Orientation="Horizontal" Margin="7.5,0" Width="200">
                                    <materialDesign:PackIcon Foreground="White"  Kind="ColorLens" Width="24" Height="24"   VerticalAlignment="Center"/>
                                    <TextBlock Text="Float Color Editor" VerticalAlignment="Center" Margin="20,0" Foreground="White"/>
                                </StackPanel>
                            </RadioButton>
                            <RadioButton Height="40" Style="{StaticResource TabRadioButton}" Checked="TabRadioButtonWebsocket_Checked">
                                <StackPanel Orientation="Horizontal" Margin="7.5,0" Width="200">
                                    <materialDesign:PackIcon Foreground="White"  Kind="LanConnect" Width="24" Height="24"   VerticalAlignment="Center"/>
                                    <TextBlock Text="Websocket Server" VerticalAlignment="Center" Margin="20,0" Foreground="White"/>
                                </StackPanel>
                            </RadioButton>
                            <RadioButton Height="40" Style="{StaticResource TabRadioButton}" Checked="TabRadioButtonGithub_Checked">
                                <StackPanel Orientation="Horizontal" Margin="7.5,0" Width="200">
                                    <materialDesign:PackIcon Foreground="White"  Kind="GithubBox" Width="24" Height="24"   VerticalAlignment="Center"/>
                                    <TextBlock Text="About" VerticalAlignment="Center" Margin="20,0" Foreground="White"/>
                                </StackPanel>
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
